#How many unique nodes are there on the Data Bank system?
SELECT COUNT(DISTINCT node_id) AS unique_nodes from customer_nodes
order by node_id;

#What is the number of nodes per region?
SELECT r.region_id,
       r.region_name,
	   count(c.node_id) as no_of_nodes
	   from regions r 
LEFT JOIN customer_nodes c
ON r.region_id=c.region_id
GROUP BY r.region_name,r.region_id
ORDER BY no_of_nodes desc;

#How many customers are allocated to each region?
SELECT r.region_id,
       r.region_name,
       COUNT(DISTINCT c.customer_id) as customers
       from regions r
JOIN customer_nodes c
ON r.region_id=c.region_id
GROUP BY r.region_name,r.region_id
ORDER BY customers desc;

#How many days on average are customers reallocated to a different node?
SELECT round(AVG(DATEDIFF(end_date, start_date)),2) AS avg_number_of_day
FROM customer_nodes
WHERE end_date != '9999-12-31';
#(or)
UPDATE  customer_nodes
SET end_date ='2020-12-31' WHERE end_date='9999-12-31';
SELECT round(AVG(DATEDIFF(end_date, start_date)),2) AS avg_number_of_day
FROM customer_nodes

#Customer Transactions
#What is the unique count and total amount for each transaction type?
SELECT txn_type,
		COUNT(*) AS unique_counts,
        SUM(txn_amount) as total_amount
from customer_transactions
GROUP BY txn_type
ORDER BY total_amount desc

#What is the average total historical deposit counts and amounts for all customers?
with avg_ as(SELECT customer_id,txn_type,
       COUNT(*) AS deposit_count,
       SUM(txn_amount) as totalamount
       from customer_transactions
WHERE txn_type='deposit'
GROUP BY customer_id,txn_type)
SELECT txn_type,
		ROUND(Avg(deposit_count),2) as avg_deposit,
        ROUND(AVG(totalamount),2) as avg_dep_amount
        from avg_
GROUP BY txn_type
         
#For each month - how many Data Bank customers make more than 1 deposit and either 1 purchase or 1 withdrawal in a single month?
with cte as (SELECT customer_id,
	   extract(month from txn_date) as months,
       COUNT(Case WHEN txn_type='deposit' THEN 1 END ) AS deposit_count,
       COUNT(Case WHEN txn_type='withdrawal' THEN 1 END ) AS withdrawal_count,
       COUNT(Case WHEN txn_type='purchase' THEN 1 END ) AS purchase_count
       from customer_transactions
	group by customer_id,extract(month from txn_date))

SELECT months,COUNT(DISTINCT customer_id) as customer
from cte
WHERE deposit_count >1 AND (purchase_count=1 OR withdrawal_count=1)
GROUP BY months

#What is the closing balance for each customer at the end of the month?
WITH cte as(
SELECT customer_id,
		MONTH(txn_date) as month_num,
		MONTHNAME(txn_date) as month_name,
        SUM(CASE WHEN txn_type='deposit' THEN txn_amount ELSE -1 * txn_amount END )AS transaction_amount
from 
        customer_transactions
GROUP BY customer_id,
		MONTH(txn_date),
		 MONTHNAME(txn_date)
)
SELECT cte.customer_id,
		cte.month_name,
        SUM(cte.transaction_amount) OVER(PARTITION BY cte.customer_id ORDER BY cte.month_num) as closing_balance
        from cte;

#What is the percentage of customers who increase their closing balance by more than 5%?
WITH monthly_transactions AS (
    SELECT 
        customer_id,
        LAST_DAY(txn_date) AS end_date,
        SUM(CASE 
                WHEN txn_type IN ('withdrawal', 'purchase') THEN -txn_amount
                ELSE txn_amount 
            END) AS transactions
    FROM 
        customer_transactions
    GROUP BY 
        customer_id, LAST_DAY(txn_date)
),
closing_balances AS (
    SELECT 
        customer_id,
        end_date,
        COALESCE(SUM(transactions) OVER(PARTITION BY customer_id ORDER BY end_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) AS closing_balance
    FROM 
        monthly_transactions
),
pct_increase AS (
    SELECT 
        customer_id,
        end_date,
        closing_balance,
        LAG(closing_balance) OVER (PARTITION BY customer_id ORDER BY end_date) AS prev_closing_balance,
        100 * (closing_balance - LAG(closing_balance) OVER (PARTITION BY customer_id ORDER BY end_date)) / NULLIF(LAG(closing_balance) OVER (PARTITION BY customer_id ORDER BY end_date), 0) AS pct_increase
    FROM 
        closing_balances
)
SELECT 
    CAST(100.0 * COUNT(DISTINCT customer_id) / (SELECT COUNT(DISTINCT customer_id) FROM customer_transactions) AS DECIMAL(10,2)) AS pct_customers
FROM 
    pct_increase
WHERE 
    pct_increase > 5;

#running customer balance column that includes the impact each transaction
SELECT customer_id,
		txn_date,
        txn_type,
        txn_amount,
        SUM(CASE WHEN txn_type='deposit' THEN txn_amount ELSE -1* txn_amount END) 
          OVER(PARTITION BY customer_id order by txn_date)as running_balance
from 
	customer_transactions;
    
#each txn_type count
SELECT 
    r.region_id,
    r.region_name,
    COUNT(CASE WHEN ct.txn_type = 'PURCHASE' THEN 1 END) AS purchase_count,
    COUNT(CASE WHEN ct.txn_type = 'WITHDRAWAL' THEN 1 END) AS withdrawal_count,
    COUNT(CASE WHEN ct.txn_type = 'DEPOSIT' THEN 1 END) AS deposit_count
FROM 
    Regions r
JOIN 
    Customer_Nodes cn ON r.region_id = cn.region_id
JOIN 
    Customer_Transactions ct ON cn.customer_id = ct.customer_id
GROUP BY 
    r.region_id, r.region_name;
